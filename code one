class Category:
    def __init__(self, name):
        self.name = name
        self.ledger = []

    def deposit(self, amount, description=""):
        self.ledger.append({"amount": amount, "description": description})

    def withdraw(self, amount, description=""):
        if self.check_funds(amount):
            self.ledger.append({"amount": -amount, "description": description})
            return True
        else:
            return False

    def get_balance(self):
        balance = 0
        for transaction in self.ledger:
            balance += transaction["amount"]
        return balance

    def transfer(self, amount, category):
        if self.check_funds(amount):
            self.withdraw(amount, f"Transfer to {category.name}")
            category.deposit(amount, f"Transfer from {self.name}")
            return True
        else:
            return False

    def check_funds(self, amount):
        return amount <= self.get_balance()

    def __str__(self):
        title = f"{self.name:*^30}\n"
        items = ""
        total = 0
        for transaction in self.ledger:
            items += f"{transaction['description'][:23]:23}" + f"{transaction['amount']:>7.2f}" + "\n"
            total += transaction["amount"]
        output = title + items + "Total: " + str(total)
        return output


def create_spend_chart(categories):
    total_withdrawals = 0
    category_withdrawals = []
    category_names = []
    for category in categories:
        total_category_withdrawals = 0
        for transaction in category.ledger:
            if transaction["amount"] < 0:
                total_category_withdrawals += abs(transaction["amount"])
        category_withdrawals.append(total_category_withdrawals)
        total_withdrawals += total_category_withdrawals
        category_names.append(category.name)

    percentages = []
    for withdrawal in category_withdrawals:
        percentage = withdrawal / total_withdrawals * 100
        percentage = percentage - (percentage % 10)
        percentages.append(int(percentage))

    graph = "Percentage spent by category\n"
    labels = range(100, -10, -10)

    for label in labels:
        graph += f"{label:3}| "
        for percentage in percentages:
            if percentage >= label:
                graph += "o  "
            else:
                graph += "   "
        graph += "\n"

    graph += "    " + "-" * (len(categories) * 3 + 1) + "\n"

    max_name_length = max([len(name) for name in category_names])

    for i in range(max_name_length):
        graph += "     "
        for name in category_names:
            if i < len(name):
                graph += name[i] + "  "
            else:
                graph += "   "
        if i != max_name_length - 1:
            graph += "\n"

    return graph
